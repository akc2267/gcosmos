From dd4d2c3281660516f25c3edac7ab1a29edbb7c66 Mon Sep 17 00:00:00 2001
From: Mark Rushakoff <mark@strange.love>
Date: Mon, 29 Jul 2024 11:57:21 -0400
Subject: [PATCH 4/6] feat: add (AppManager[T]).SimulateWithState

I think we can use simulation to determine whether an incoming
transaction is acceptable, but if we had any prior transactions, they
all need to build upon previous state; the app manager did not have a
SimulateWithState method already, so we add it here.
---
 server/v2/appmanager/appmanager.go | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/server/v2/appmanager/appmanager.go b/server/v2/appmanager/appmanager.go
index 6a5f96ec5f..2c921f2aae 100644
--- a/server/v2/appmanager/appmanager.go
+++ b/server/v2/appmanager/appmanager.go
@@ -159,3 +159,12 @@ func (a AppManager[T]) Query(ctx context.Context, version uint64, request transa
 func (a AppManager[T]) QueryWithState(ctx context.Context, state corestore.ReaderMap, request transaction.Msg) (transaction.Msg, error) {
 	return a.stf.Query(ctx, state, a.config.QueryGasLimit, request)
 }
+
+// SimulateWithState has been added in as a patch, for gcosmos.
+func (a AppManager[T]) SimulateWithState(
+	ctx context.Context,
+	state corestore.ReaderMap,
+	tx T,
+) (server.TxResult, corestore.WriterMap) {
+	return a.stf.Simulate(ctx, state, a.config.SimulationGasLimit, tx)
+}
-- 
2.44.0

